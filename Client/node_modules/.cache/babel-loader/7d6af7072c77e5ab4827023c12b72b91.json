{"ast":null,"code":"const BASE_URL = 'http://localhost:3001';\nexport const fetchProducts = () => dispatch => {\n  fetch(`${BASE_URL}/products`).then(res => res.json()).then(products => dispatch({\n    type: 'FETCH_PRODUCTS',\n    payload: products\n  }));\n}; // Filter Product By Search\n\nexport const filterProducts = (products, filter) => dispatch => {\n  const filteredProducts = products.filter(product => product.name.toUpperCase().indexOf(filter.toUpperCase()) > -1);\n  dispatch({\n    type: 'FILTER_PRODUCTS_BY_SEARCH',\n    payload: {\n      filter: filter,\n      filteredProducts: filteredProducts\n    }\n  });\n}; // Sort Products By Latest, Lowest, Highest\n\nexport const sortProducts = (products, sort) => dispatch => {\n  const sortedProducts = products.slice();\n\n  if (sort === 'latest') {\n    sortedProducts.sort((a, b) => a.id > b.id ? 1 : -1);\n  } else {\n    sortedProducts.sort((a, b) => sort === 'lowest' ? a.price > b.price ? 1 : -1 : a.price > b.price ? -1 : 1);\n  }\n\n  dispatch({\n    type: 'ORDER_PRODUCTS_BY_PRICE',\n    payload: {\n      sort: sort,\n      sortedProducts: sortedProducts\n    }\n  });\n}; // Filter Products By Category\n\nexport const filterProductsByCategory = (products, category) => dispatch => {\n  let filteredByCategory = products;\n\n  if (category !== 'All') {\n    filteredByCategory = products.filter(product => product.category.toUpperCase() === category.toUpperCase());\n  }\n\n  dispatch({\n    type: 'FILTER_PRODUCTS_BY_CATEGORY',\n    payload: {\n      category: category,\n      filteredByCategory: filteredByCategory\n    }\n  });\n};\nexport const detailsProduct = productId => dispatch => {\n  fetch(`${BASE_URL}/products/${productId}`).then(res => res.json()).then(product => dispatch({\n    type: 'GET_PRODUCT',\n    payload: product\n  }));\n};\nexport const saveProduct = product => dispatch => {\n  if (product.id) {\n    fetch(`${BASE_URL}/products/${product.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        product\n      })\n    }).then(res => res.json()).then(product => dispatch({\n      type: 'SAVE_PRODUCT',\n      payload: product,\n      success: true\n    }));\n  } else {\n    fetch(`${BASE_URL}/products`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        product\n      })\n    }).then(res => res.json()).then(product => dispatch({\n      type: 'SAVE_PRODUCT',\n      payload: product,\n      success: true\n    }));\n  }\n};\nexport const deleteProduct = product => dispatch => {\n  fetch(`${BASE_URL}/products/${product.id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(product => dispatch({\n    type: 'DELETE_PRODUCT',\n    payload: product,\n    success: true\n  }));\n};\nexport const saveProductReview = (productId, review) => dispatch => {\n  fetch(`${BASE_URL}/products/${productId}/reviews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      review\n    })\n  }).then(res => res.json()).then(review => dispatch({\n    type: 'SAVE_PRODUCT_REVIEW',\n    payload: review,\n    success: true\n  }));\n};","map":{"version":3,"sources":["/Users/leon/Development/Deli-Vape-Project/Client/src/actions/productActions.js"],"names":["BASE_URL","fetchProducts","dispatch","fetch","then","res","json","products","type","payload","filterProducts","filter","filteredProducts","product","name","toUpperCase","indexOf","sortProducts","sort","sortedProducts","slice","a","b","id","price","filterProductsByCategory","category","filteredByCategory","detailsProduct","productId","saveProduct","method","headers","body","JSON","stringify","success","deleteProduct","saveProductReview","review"],"mappings":"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","sourcesContent":["const BASE_URL = 'http://localhost:3001';\n\nexport const fetchProducts = () => dispatch => {\n  fetch(`${BASE_URL}/products`)\n    .then(res => res.json())\n    .then(products => dispatch({ type: 'FETCH_PRODUCTS', payload: products }));\n};\n\n// Filter Product By Search\nexport const filterProducts = (products, filter) => dispatch => {\n  const filteredProducts = products.filter(product => product.name.toUpperCase().indexOf(filter.toUpperCase()) > -1);\n\n  dispatch({\n    type: 'FILTER_PRODUCTS_BY_SEARCH',\n    payload: {\n      filter: filter,\n      filteredProducts: filteredProducts,\n    },\n  });\n};\n\n// Sort Products By Latest, Lowest, Highest\nexport const sortProducts = (products, sort) => dispatch => {\n  const sortedProducts = products.slice();\n  if (sort === 'latest') {\n    sortedProducts.sort((a, b) => (a.id > b.id ? 1 : -1));\n  } else {\n    sortedProducts.sort((a, b) => (sort === 'lowest' ? (a.price > b.price ? 1 : -1) : a.price > b.price ? -1 : 1));\n  }\n\n  dispatch({\n    type: 'ORDER_PRODUCTS_BY_PRICE',\n    payload: {\n      sort: sort,\n      sortedProducts: sortedProducts,\n    },\n  });\n};\n\n// Filter Products By Category\nexport const filterProductsByCategory = (products, category) => dispatch => {\n  let filteredByCategory = products;\n  if (category !== 'All') {\n    filteredByCategory = products.filter(product => product.category.toUpperCase() === category.toUpperCase());\n  }\n  dispatch({\n    type: 'FILTER_PRODUCTS_BY_CATEGORY',\n    payload: {\n      category: category,\n      filteredByCategory: filteredByCategory,\n    },\n  });\n};\n\nexport const detailsProduct = productId => dispatch => {\n  fetch(`${BASE_URL}/products/${productId}`)\n    .then(res => res.json())\n    .then(product => dispatch({ type: 'GET_PRODUCT', payload: product }));\n};\n\nexport const saveProduct = product => dispatch => {\n  if (product.id) {\n    fetch(`${BASE_URL}/products/${product.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ product }),\n    })\n      .then(res => res.json())\n      .then(product => dispatch({ type: 'SAVE_PRODUCT', payload: product, success: true }));\n  } else {\n    fetch(`${BASE_URL}/products`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ product }),\n    })\n      .then(res => res.json())\n      .then(product => dispatch({ type: 'SAVE_PRODUCT', payload: product, success: true }));\n  }\n};\n\nexport const deleteProduct = product => dispatch => {\n  fetch(`${BASE_URL}/products/${product.id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }).then(product => dispatch({ type: 'DELETE_PRODUCT', payload: product, success: true }));\n};\n\nexport const saveProductReview = (productId, review) => dispatch => {\n  fetch(`${BASE_URL}/products/${productId}/reviews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ review }),\n  })\n    .then(res => res.json())\n    .then(review => dispatch({ type: 'SAVE_PRODUCT_REVIEW', payload: review, success: true }));\n};\n"]},"metadata":{},"sourceType":"module"}