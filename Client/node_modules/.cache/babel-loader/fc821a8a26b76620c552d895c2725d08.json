{"ast":null,"code":"const BASE_URL = 'https://react-widget-store-api.herokuapp.com/api/v1';\nexport const createOrder = order => dispatch => {\n  fetch(`${BASE_URL}/orders`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      order\n    })\n  }).then(res => res.json()).then(order => dispatch({\n    type: 'CREATE_ORDER',\n    payload: order,\n    success: true\n  }));\n};\nexport const fetchOrder = orderId => dispatch => {\n  fetch(`${BASE_URL}/orders/${orderId}`).then(res => res.json()).then(order => dispatch({\n    type: 'FETCH_ORDER',\n    payload: order,\n    success: true\n  }));\n};\nexport const listMyOrders = () => dispatch => {\n  fetch(`${BASE_URL}/orders`).then(res => res.json()).then(orders => dispatch({\n    type: 'FETCH_MY_ORDERS',\n    payload: orders,\n    success: true\n  }));\n};\nexport const fetchOrders = () => dispatch => {\n  fetch(`${BASE_URL}/orders`).then(res => res.json()).then(orders => dispatch({\n    type: 'FETCH_ORDERS',\n    payload: orders,\n    success: true\n  }));\n};\nexport const payOrder = order => dispatch => {\n  fetch(`${BASE_URL}/orders/${order.id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      order\n    })\n  }).then(res => res.json()).then(order => dispatch({\n    type: 'PAY_ORDER',\n    payload: order,\n    success: true\n  }));\n};\nexport const deliverOrder = order => dispatch => {\n  fetch(`${BASE_URL}/orders/${order.id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      order\n    })\n  }).then(res => res.json()).then(order => dispatch({\n    type: 'DELIVER_ORDER',\n    payload: order,\n    success: true\n  }));\n};\nexport const deleteOrder = order => dispatch => {\n  fetch(`${BASE_URL}/orders/${order.id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(order => dispatch({\n    type: 'DELETE_ORDER',\n    payload: order,\n    success: true\n  }));\n};","map":{"version":3,"sources":["/Users/leon/Development/Deli-Vape-Project/Client/src/actions/orderActions.js"],"names":["BASE_URL","createOrder","order","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","type","payload","success","fetchOrder","orderId","listMyOrders","orders","fetchOrders","payOrder","id","deliverOrder","deleteOrder"],"mappings":"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","sourcesContent":["const BASE_URL = 'https://react-widget-store-api.herokuapp.com/api/v1';\n\nexport const createOrder = order => dispatch => {\n  fetch(`${BASE_URL}/orders`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ order }),\n  })\n    .then(res => res.json())\n    .then(order => dispatch({ type: 'CREATE_ORDER', payload: order, success: true }));\n};\n\nexport const fetchOrder = orderId => dispatch => {\n  fetch(`${BASE_URL}/orders/${orderId}`)\n    .then(res => res.json())\n    .then(order => dispatch({ type: 'FETCH_ORDER', payload: order, success: true }));\n};\n\nexport const listMyOrders = () => dispatch => {\n  fetch(`${BASE_URL}/orders`)\n    .then(res => res.json())\n    .then(orders => dispatch({ type: 'FETCH_MY_ORDERS', payload: orders, success: true }));\n};\n\nexport const fetchOrders = () => dispatch => {\n  fetch(`${BASE_URL}/orders`)\n    .then(res => res.json())\n    .then(orders => dispatch({ type: 'FETCH_ORDERS', payload: orders, success: true }));\n};\n\nexport const payOrder = order => dispatch => {\n  fetch(`${BASE_URL}/orders/${order.id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ order }),\n  })\n    .then(res => res.json())\n    .then(order => dispatch({ type: 'PAY_ORDER', payload: order, success: true }));\n};\n\nexport const deliverOrder = order => dispatch => {\n  fetch(`${BASE_URL}/orders/${order.id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ order }),\n  })\n    .then(res => res.json())\n    .then(order => dispatch({ type: 'DELIVER_ORDER', payload: order, success: true }));\n};\n\nexport const deleteOrder = order => dispatch => {\n  fetch(`${BASE_URL}/orders/${order.id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }).then(order => dispatch({ type: 'DELETE_ORDER', payload: order, success: true }));\n};\n"]},"metadata":{},"sourceType":"module"}