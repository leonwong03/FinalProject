{"ast":null,"code":"var _jsxFileName = \"/Users/leon/Development/Deli-Vape-Project/Client/src/containers/userContainers/ProfileContainer.js\";\nimport React, { useState, useEffect } from 'react';\nimport { logout, update } from '../../actions/userActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listMyOrders } from '../../actions/orderActions';\nimport { Link } from 'react-router-dom';\nimport formatCurrency from '../../util';\n\nconst ProfileContainer = props => {\n  const dispatch = useDispatch();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConformation] = useState('');\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  const {\n    success,\n    myOrders\n  } = useSelector(state => state.orders);\n  const myNewOrders = myOrders.filter(order => order.user.id === userInfo.user.id).sort((a, b) => a.created_at < b.created_at ? 1 : -1);\n\n  const handleLogout = () => {\n    dispatch(logout());\n    props.history.push('/signin');\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(update(userInfo.user.id, firstName, lastName, email, password, passwordConfirmation));\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      setEmail(userInfo.user.email);\n      setFirstName(userInfo.user.first_name);\n      setLastName(userInfo.user.last_name);\n    }\n\n    dispatch(listMyOrders(userInfo.user)); // }\n\n    return () => {};\n  }, [dispatch, userInfo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"User rofile\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: firstName,\n    required: true,\n    type: \"text\",\n    name: \"first_name\",\n    id: \"first_name\",\n    onChange: e => setFirstName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"last_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: lastName,\n    required: true,\n    type: \"text\",\n    name: \"last_name\",\n    id: \"last_name\",\n    onChange: e => setLastName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    required: true,\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password_confirmation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Password Confirmation\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"password\",\n    id: \"password_confirmation\",\n    name: \"password_confirmation\",\n    onChange: e => setPasswordConformation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Update\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleLogout,\n    className: \"button secondary full-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Logout\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-orders content-margined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Your Orders\"), !success ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Paid\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, myNewOrders.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n    key: order.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, order.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, order.created_at.substring(0, 10)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, formatCurrency(order.totalPrice)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, order.isPaid.toString()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/orders/${order.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Details\"))))))));\n};\n\nexport default ProfileContainer;","map":{"version":3,"sources":["/Users/leon/Development/Deli-Vape-Project/Client/src/containers/userContainers/ProfileContainer.js"],"names":["React","useState","useEffect","logout","update","useSelector","useDispatch","listMyOrders","Link","formatCurrency","ProfileContainer","props","dispatch","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConformation","userInfo","state","user","success","myOrders","orders","myNewOrders","filter","order","id","sort","a","b","created_at","handleLogout","history","push","submitHandler","e","preventDefault","first_name","last_name","target","value","map","substring","totalPrice","isPaid","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { logout, update } from '../../actions/userActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listMyOrders } from '../../actions/orderActions';\nimport { Link } from 'react-router-dom';\nimport formatCurrency from '../../util';\n\nconst ProfileContainer = props => {\n  const dispatch = useDispatch();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConformation] = useState('');\n  const { userInfo } = useSelector(state => state.user);\n  const { success, myOrders } = useSelector(state => state.orders);\n  const myNewOrders = myOrders\n    .filter(order => order.user.id === userInfo.user.id)\n    .sort((a, b) => (a.created_at < b.created_at ? 1 : -1));\n\n  const handleLogout = () => {\n    dispatch(logout());\n    props.history.push('/signin');\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(update(userInfo.user.id, firstName, lastName, email, password, passwordConfirmation));\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      setEmail(userInfo.user.email);\n      setFirstName(userInfo.user.first_name);\n      setLastName(userInfo.user.last_name);\n    }\n    dispatch(listMyOrders(userInfo.user));\n\n    // }\n    return () => {};\n  }, [dispatch, userInfo]);\n\n  return (\n    <div className='profile'>\n      <div className='profile-info'>\n        <form onSubmit={submitHandler}>\n          <ul className='form-container'>\n            <li>\n              <h2>User rofile</h2>\n            </li>\n            <li>\n              <label htmlFor='first_name'>First Name</label>\n              <input\n                value={firstName}\n                required\n                type='text'\n                name='first_name'\n                id='first_name'\n                onChange={e => setFirstName(e.target.value)}\n              />\n            </li>\n            <li>\n              <label htmlFor='last_name'>Last Name</label>\n              <input\n                value={lastName}\n                required\n                type='text'\n                name='last_name'\n                id='last_name'\n                onChange={e => setLastName(e.target.value)}\n              />\n            </li>\n            <li>\n              <label htmlFor='email'>Email</label>\n              <input\n                value={email}\n                required\n                type='email'\n                name='email'\n                id='email'\n                onChange={e => setEmail(e.target.value)}\n              />\n            </li>\n            <li>\n              <label htmlFor='password'>Password</label>\n              <input\n                required\n                type='password'\n                id='password'\n                name='password'\n                onChange={e => setPassword(e.target.value)}\n              />\n            </li>\n            <li>\n              <label htmlFor='password_confirmation'>Password Confirmation</label>\n              <input\n                required\n                type='password'\n                id='password_confirmation'\n                name='password_confirmation'\n                onChange={e => setPasswordConformation(e.target.value)}\n              />\n            </li>\n            <li>\n              <button type='submit' className='button primary'>\n                Update\n              </button>\n            </li>\n            <li>\n              <button type='button' onClick={handleLogout} className='button secondary full-width'>\n                Logout\n              </button>\n            </li>\n          </ul>\n        </form>\n      </div>\n      <div className='profile-orders content-margined'>\n        <h2>Your Orders</h2>\n        {!success ? (\n          <div>Loading...</div>\n        ) : (\n          <table className='table'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Paid</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {myNewOrders.map(order => (\n                <tr key={order.id}>\n                  <td>{order.id}</td>\n                  <td>{order.created_at.substring(0, 10)}</td>\n                  <td>{formatCurrency(order.totalPrice)}</td>\n                  <td>{order.isPaid.toString()}</td>\n                  <td>\n                    <Link to={`/orders/${order.id}`}>Details</Link>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileContainer;\n"]},"metadata":{},"sourceType":"module"}